<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:security="http://www.springframework.org/schema/security"

       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/data/jpa
            http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
            http://www.springframework.org/schema/security
            http://www.springframework.org/schema/security/spring-security.xsd">

    <security:http pattern="/css/**" security="none"/>
    <security:http pattern="/login.jsp*" security="none"/>
    <security:http>
        <security:intercept-url pattern="/login" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <security:intercept-url pattern="/login.jsp*" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <security:intercept-url pattern="/**" access="hasRole('USER')" />
        <security:form-login />
        <security:logout />
    </security:http>
    <security:authentication-manager>
        <security:authentication-provider>
            <security:user-service>
                <security:user name="jimi" password="jimispassword" authorities="ROLE_USER, ROLE_ADMIN" />
                <security:user name="bob" password="bobspassword" authorities="ROLE_USER" />
            </security:user-service>
        </security:authentication-provider>
    </security:authentication-manager>

    <!--<import resource="springsecurity.xml" />-->
    <!-- the datasource -->
    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost/auctions?useSSL=false" />
        <property name="username" value="root" />
        <property name="password" value="root" />
    </bean>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="generateDdl" value="true" />
                <property name="database" value="MYSQL" />
            </bean>
        </property>
        <property name="packagesToScan" value="edu.mum.cs544.auctions" />
    </bean>

    <bean id="transactionManager"
          class="org.springframework.orm.jpa.JpaTransactionManager">
    </bean>

    <jpa:repositories base-package="edu.mum.cs544.auctions" />


    <bean id="hibernateProperties"
          class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="properties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">create</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.id.new_generator_mappings">false</prop>
                <!-- !IMPORTANT Let spring be the session context class
                    <prop key="current_session_context_class">thread</prop>
                 -->
            </props>
        </property>
    </bean>

    <!--<aop:aspectj-autoproxy proxy-target-class="true" />
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
    -->
    <!-- from here -->
    <!--


    <context:component-scan base-package="edu.mum.cs544"/>

    <bean id="productService" class="edu.mum.cs544.auctions.service.ProductService">
        <constructor-arg ref="productDAO"/>
        <constructor-arg ref="itemDAO"/>
    </bean>
    <bean id="auctionService" class="edu.mum.cs544.auctions.service.AuctionService">
        <constructor-arg ref="auctionDAO"/>
    </bean>


    <bean id="userService" class="edu.mum.cs544.auctions.service.UserService">
        <constructor-arg ref="sellerDAO"/>
        <constructor-arg ref="customerDAO"/>
    </bean>
-->

    <!--<mvc:annotation-driven />-->

    <!-- needed for security tag lib expression support -->




    <!--<security:authentication-manager>
        <security:authentication-provider>
            <security:user-service>
                <security:user name="subhechha" password="123" authorities="CUSTOMER"/>
                <security:user name="mo" password="321" authorities="SELLER"/>
            </security:user-service>
        </security:authentication-provider>
    </security:authentication-manager>-->

    <!--<bean id="webexpressionHandler"
                class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler"/>

    <security:http pattern="/" security="none"/>
    <security:http pattern="/resources/**" security="none"/>

    <security:http use-expressions="true">
        <security:intercept-url pattern="/login" access="permitAll()"/>
        <security:intercept-url pattern="/index" access="permitAll()"/>
        <security:intercept-url pattern="/**" method="POST" access="hasRole('customer')"/>
        <security:intercept-url pattern="/**" method="GET" access="hasRole('seller')"/>
        <security:form-login login-page="/login" authentication-failure-url="/auctions"
                    default-target-url="/auctions"/>
        <security:logout logout-success-url="/login"/>
    </security:http>

    -->

</beans>